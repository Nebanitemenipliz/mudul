from telethon.tl.types import Message  # type: ignore

from .. import loader, utils
from telethon import events, utils, Button
from telethon.tl.types import InputTextMessageContent
from telethon.tl.types import InlineKeyboardButton, InlineKeyboardMarkup
from telethon.tl.functions.messages import EditMessageTextRequest
from telethon.tl.functions.messages import DeleteMessagesRequest

from telethon import functions, types

from .. import loader, utils


@loader.tds
class InlineButtonMod(loader.Module):
    strings = {
        "name": "InlineButtonMod",
        "vk_text": "Your VK page",
        "vk_link": "https://vk.com",
        "button_text": "Click me"
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            vk_text=self.strings["vk_text"],
            vk_link=self.strings["vk_link"],
            button_text=self.strings["button_text"]
        )

    async def client_ready(self, client, db):
        self.client = client

    @loader.unrestricted
    async def inlinebcmd(self, message):
        """Create inline button with vk link"""
        text = self.config["vk_text"]
        link = self.config["vk_link"]
        button_text = self.config["button_text"]
        keyboard = InlineKeyboardMarkup([[InlineKeyboardButton(button_text, url=link)]])
        await self.client.send_message(entity=message.chat_id, message=text, reply_markup=keyboard)

    async def client_ready(self, client, db):
        self.client = client
