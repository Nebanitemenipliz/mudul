# meta developer: @modwini
import datetime
from telethon import events, types, utils

from .. import loader, utils as rutils


@loader.tds
class MessageStatsMod(loader.Module):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ"""
    strings = {"name": "MessageStats"}

    def __init__(self):
        self.name = self.strings["name"]
        self.client = None
        self.today = datetime.date.today()
        self.week_ago = self.today - datetime.timedelta(days=7)
        self.month_ago = self.today.replace(day=1)
        self.all_time = None

    async def client_ready(self, client, db):
        self.client = client
        self.all_time = (await self.client.get_messages(await self.client.get_me(), limit=1))[0].date.date()

    @loader.ratelimit
    async def statscmd(self, message: types.Message):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π"""
        await rutils.answer(message, "<b>üë∫üî™–ò—â—É —Å–æ–æ–±—â–µ–Ω–∏—è...</b>")
        day_count = week_count = month_count = all_count = 0
        async for msg in self.client.iter_messages(message.to_id, limit=1000):
            if msg.date.date() == self.today:
                day_count += 1
            if self.week_ago <= msg.date.date() <= self.today:
                week_count += 1
            if self.month_ago <= msg.date.date() <= self.today:
                month_count += 1
            if msg.date.date() >= self.all_time:
                all_count += 1
        stats_text = f"<b>üëæ–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —ç—Ç–æ–º —á–∞—Ç–µ:</b>"
        day_text = f"<b>–ó–∞ –¥–µ–Ω—å:</b> <code>{day_count}</code>"
        week_text = f"<b>–ó–∞ –Ω–µ–¥–µ–ª—é:</b> <code>{week_count}</code>"
        month_text = f"<b>–ó–∞ –º–µ—Å—è—Ü:</b> <code>{month_count}</code>"
        all_text = f"<b>–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è:</b> <code>{all_count}</code>"

        await rutils.answer(message, "\n".join([stats_text, day_text, week_text, month_text, all_text]))
