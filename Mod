import datetime
from telethon import events, utils
from telethon.tl import types

from .. import loader, utils


@loader.tds
class MessageStatsMod(loader.Module):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –≤—ã –Ω–∞–ø–∏—Å–∞–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ"""
    strings = {"name": "MessageStats"}

    def __init__(self):
        self.name = self.strings["name"]
        self._client = None
        self.today = None
        self.week_ago = None
        self.month_ago = None
        self.all_time = None

    async def client_ready(self, client, db):
        self._client = client
        self.today = datetime.datetime.now().date()
        self.week_ago = self.today - datetime.timedelta(days=7)
        self.month_ago = self.today.replace(day=1)
        self.all_time = (await self._client.get_messages(await self._client.get_input_entity(await self._client.get_me()), limit=1))[0].date.date()

    async def statscmd(self, message: types.Message):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π"""
        if self.today is None:
            await utils.answer(message, "<b>üë∫üî™–ò—â—É —Å–æ–æ–±—â–µ–Ω–∏—è...</b>")
            return

        await utils.answer(message, f"<b>üëæ–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —ç—Ç–æ–º —á–∞—Ç–µ:</b>\n"
                                    f"<b>–ó–∞ –¥–µ–Ω—å:</b> <code>{day_count}</code>\n"
                                    f"<b>–ó–∞ –Ω–µ–¥–µ–ª—é:</b> <code>{week_count}</code>\n"
                                    f"<b>–ó–∞ –º–µ—Å—è—Ü:</b> <code>{month_count}</code>\n"
                                    f"<b>–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è:</b> <code>{all_count}</code>")

            day_count = week_count = month_count = all_count = 0
    
    for msg in messages:
        if msg.date.date() == self.today:
            day_count += 1
        if self.week_ago <= msg.date.date() <= self.today:
            week_count += 1
        if self.month_ago <= msg.date.date() <= self.today:
            month_count += 1
        if msg.date.date() >= self.all_time:
            all_count += 1

    day_text = f"<b>–ó–∞ –¥–µ–Ω—å:</b> <code>{day_count}</code>"
    week_text = f"<b>–ó–∞ –Ω–µ–¥–µ–ª—é:</b> <code>{week_count}</code>"
    month_text = f"<b>–ó–∞ –º–µ—Å—è—Ü:</b> <code>{month_count}</code>"
    all_text = f"<b>–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è:</b> <code>{all_count}</code>"
    
    activity_text = "<b>üëæ–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ —ç—Ç–æ–º —á–∞—Ç–µ:</b>\n"
    await utils.answer(message, f"{search_text.replace('üî™', 'üîç')}\n{activity_text}{day_text}\n{week_text}\n{month_text}\n{all_text}") 
